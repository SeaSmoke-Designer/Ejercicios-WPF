<Window x:Class="Comida.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Comida"
        xmlns:convertidor="clr-namespace:Comida.Convertidor"
        mc:Ignorable="d"
        Title="Comida" Height="700" Width="950" MinWidth="650" Icon="./Recursos/Icono/fruit_food_apple.ico"
        Background="#96C7DB">
    <Window.Resources>
        <convertidor:ConvertidorNombrePlato x:Key="ConvertidorFuente"></convertidor:ConvertidorNombrePlato>
        <Style TargetType="{x:Type Border}" x:Key="BorderDockPanel">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Orientation" Value="Vertical"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template" Value="{DynamicResource CheckBoxAlergenosTemplate}"/>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="ImagenesBanderas">
            <Setter Property="DockPanel.Dock" Value="Left"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Americana">
                    <Setter Property="Source" Value="/Recursos/Banderas/united_states.png"/>
                    <Setter Property="ToolTip" Value="Comida Americana"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="China">
                    <Setter Property="Source" Value="/Recursos/Banderas/china.png"/>
                    <Setter Property="ToolTip" Value="Comida China"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Mexicana">
                    <Setter Property="Source" Value="/Recursos/Banderas/mexico.png"/>
                    <Setter Property="ToolTip" Value="Comida Mexicana"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="ImagenesAlergenos">
            <Setter Property="DockPanel.Dock" Value="Right"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="ImagenSoja" BasedOn="{StaticResource ImagenesAlergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Soja}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Soja"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="ImagenLeche" BasedOn="{StaticResource ImagenesAlergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Leche}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Leche"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="ImagenGluten" BasedOn="{StaticResource ImagenesAlergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Gluten}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Gluten"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="ImagenSulfitos" BasedOn="{StaticResource ImagenesAlergenos}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Sulfitos}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="ToolTip" Value="Sulfitos"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="plantillaPlatos">
            <Border BorderBrush="Black" BorderThickness="1" Margin="5" Padding="10" Background="AliceBlue" Width="200" Height="240">
                <Border.Effect>
                    <DropShadowEffect/>
                </Border.Effect>
                <DockPanel LastChildFill="False">
                    <Viewbox DockPanel.Dock="Top" Height="50">
                        <TextBlock Text="{Binding Path=Nombre}" FontFamily="{Binding Path=Tipo, Converter={StaticResource ConvertidorFuente}}"/>
                    </Viewbox>
                    <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                        <Image  Style="{StaticResource ImagenesBanderas}"/>
                        <Image Source="./Recursos/Alergenos/soybean.png" Style="{StaticResource ImagenSoja}"/>
                        <Image Source="./Recursos/Alergenos/sulfide.png" Style="{StaticResource ImagenSulfitos}"/>
                        <Image Source="./Recursos/Alergenos/milk.png" Style="{StaticResource ImagenLeche}"/>
                        <Image Source="./Recursos/Alergenos/gluten.png" Style="{StaticResource ImagenGluten}"/>
                    </DockPanel>
                    <Image Source="{Binding Path=Imagen}" Stretch="UniformToFill"/>
                </DockPanel>
            </Border>
        </DataTemplate>
        <Style TargetType="{x:Type DockPanel}" x:Key="HablitarDockPanel">
            <Setter Property="Background" Value="#DDDDDD"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="Width" Value="280"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
            <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="4">

                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>

                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="0" Color="#FF0180FF" BlurRadius="20" ></DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template" Value="{DynamicResource TextBoxTemplate}"/>
        </Style>

        <ControlTemplate x:Key="GroupBoxAlergenosTemplate" TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="6"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="6"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"/>
                <Border BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4"  Grid.Row="1" Grid.RowSpan="3">
                    <Border.OpacityMask>
                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                                <BorderGapMaskConverter/>
                            </MultiBinding.Converter>
                            <Binding ElementName="Header" Path="ActualWidth"/>
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.OpacityMask>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                </Border>
                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="CheckBoxAlergenosTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="3" Padding="2">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#FF43A3F3" Margin="1" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF43A3F3"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <ControlTemplate x:Key="ButtonLimpiarTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFCBB7F7" SnapsToDevicePixels="True" CornerRadius="5">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="white"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


    </Window.Resources>

    <Border Style="{StaticResource BorderDockPanel}">
        <DockPanel Background="White" >

            <DockPanel DockPanel.Dock="Right" LastChildFill="False" Style="{StaticResource HablitarDockPanel}">
                <StackPanel DockPanel.Dock="Top">
                    <TextBlock Text="Nombre del Plato"/>
                    <TextBox Text="{Binding Path=PlatoSeleccionado.Nombre, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
                </StackPanel>
                <StackPanel DockPanel.Dock="Top">
                    <TextBlock Text="Foto del Plato"/>
                    <TextBox Text="{Binding Path=PlatoSeleccionado.Imagen, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </StackPanel>

                <StackPanel DockPanel.Dock="Top">
                    <TextBlock Text="Tipo de Comida"/>
                    <ComboBox ItemsSource="{Binding Path=Tipos}" SelectedItem="{Binding Path=PlatoSeleccionado.Tipo}">
                    </ComboBox>
                </StackPanel>
                <GroupBox Margin="10" Header="Alergenos" DockPanel.Dock="Top" Template="{DynamicResource GroupBoxAlergenosTemplate}">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Row="0" Grid.Column="0" Content="Leche" IsChecked="{Binding Path=PlatoSeleccionado.Leche, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Row="0" Grid.Column="1" Content="Soja" IsChecked="{Binding Path=PlatoSeleccionado.Soja, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Grid.Row="1" Grid.Column="0" Content="Gluten" IsChecked="{Binding Path=PlatoSeleccionado.Gluten, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Grid.Row="1" Grid.Column="1" Content="Sulfitos" IsChecked="{Binding Path=PlatoSeleccionado.Sulfitos, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </GroupBox>
                <Button Content="Limpiar Seleccion" HorizontalAlignment="Left" Margin="15,5" DockPanel.Dock="Top" Background="White" Click="LimpiarSeleccion_Click" Template="{DynamicResource ButtonLimpiarTemplate}"/>

            </DockPanel>
            <ListBox ItemsSource="{Binding Path=Platos}" SelectedItem="{Binding Path=PlatoSeleccionado}" ItemTemplate="{StaticResource plantillaPlatos}" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled" DockPanel.Dock="Left" Margin="10">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </DockPanel>
    </Border>
</Window>
